//
//  orderDetailOrderViewController.m
//  master
//
//  Created by jin on 15/6/2.
//  Copyright (c) 2015年 JXH. All rights reserved.
//

#import "orderDetailOrderViewController.h"

@interface orderDetailOrderViewController ()<UIAlertViewDelegate>

@end

@implementation orderDetailOrderViewController


-(void) viewWillAppear:(BOOL)animated
{
    
    [self send];
}


- (void)viewDidLoad {
    [super viewDidLoad];
    self.tableview.backgroundColor=COLOR(228, 228, 228, 1);
    [self CreateFlow];
    // Do any additional setup after loading the view from its nib.
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}



-(void)send{



}

-(void)requestWithUrl:(NSString*)urlString{
    [self flowShow];
    if (!self.dataArray) {
        self.dataArray=[[NSMutableArray alloc]init];
    }
    [self.dataArray removeAllObjects];
    if (!self.skillArray) {
        self.skillArray=[[NSMutableArray alloc]init];
    }
    [self.skillArray removeAllObjects];
    NSDictionary*dict=@{@"id":[NSString stringWithFormat:@"%lu",self.id]};
    [[httpManager share]POST:urlString parameters:dict success:^(AFHTTPRequestOperation *Operation, id responseObject) {
        NSDictionary*dict=(NSDictionary*)responseObject;
        if ([[dict objectForKey:@"rspCode"] integerValue]==200) {
            MasterDetailModel*model=[[MasterDetailModel alloc]init];
            _currentDict=[[dict objectForKey:@"entity"]objectForKey:@"masterOrder"] ;
            switch ([[_currentDict objectForKey:@"orderStatus"] integerValue]) {
                case 0:
                    _orderStatus=@"待付款";
                    _type=0;
                    break;
                    case 1:
                    _orderStatus=@"预约中";
                    _type=1;
                    break;
                    case 2:
                    _type=2;
                    _orderStatus=@"工程完工";
                    break;
                    case 3:
                    _orderStatus=@"已完工";
                    case 4:
                    _type=4;
                    break;
                    case 5:
                    _orderStatus=@"已终止";
                    _type=5;
                    break;
                default:
                    break;
            }
             switch ([[_currentDict objectForKey:@"commentStatus"] integerValue]) {
                case 1:
                    _recommentStatus=1;
                    break;
                    case 2:
                    _recommentStatus=2;
                    break;
                default:
                    break;
            }
            
            if (_type==4&&_recommentStatus==2) {
                _orderStatus=@"评价";
            }
                       //预约时间
        _bespeak=[NSString stringWithFormat:@"%@到%@",[_currentDict objectForKey:@"startTime"],[_currentDict objectForKey:@"finishTime"]];
            //备注
            starModel*starsmodel=[[starModel alloc]init];
            [starsmodel setValuesForKeysWithDictionary:[_currentDict objectForKey:@"orderComment"][0]];
            self.masterID=starsmodel.id;
        _remark=[_currentDict objectForKey:@"remark"];
        for (NSInteger j=0; j<[[[[_currentDict objectForKey:@"master"] objectForKey:@"service"] objectForKey:@"servicerSkills"] count]; j++) {
                skillModel*tempModel=[[skillModel alloc]init];
                NSArray*tempArray=[[[_currentDict objectForKey:@"master"] objectForKey:@"service"] objectForKey:@"servicerSkills"];
                [tempModel setValuesForKeysWithDictionary:tempArray[j]];
                [_skillArray addObject:tempModel];
            }
            [model setValuesForKeysWithDictionary:[[[dict objectForKey:@"entity"] objectForKey:@"masterOrder"] objectForKey:@"master"]];
          
            [self.dataArray addObject:model];
        }
        [self finish];
        [self.tableview reloadData];
        self.tableview.backgroundColor=[UIColor whiteColor];
        [self flowHide];

    } failure:^(AFHTTPRequestOperation *Operation, NSError *error) {
        [self flowHide];
    }];
    

}


-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{

    
    
    if (_recommentStatus==1) {
        
        return 6;
    }
    return 5;

}

-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    
    if (section==5) {
        starModel*model=[[starModel alloc]init];
        [model setValuesForKeysWithDictionary:[_currentDict objectForKey:@"orderComment"][0]];
        if ([[model.reply objectForKey:@"content"] length]!=0) {
            return 2;
        }
        return 1;
    }
    return 1;
}

-(UITableViewCell*)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    switch (indexPath.section) {
        case 0:
        {
            peopleDetailTableViewCell*cell=[tableView dequeueReusableCellWithIdentifier:@"peopleDetailTableViewCell"];
            if (!cell) {
                cell=[[[NSBundle mainBundle]loadNibNamed:@"peopleDetailTableViewCell" owner:nil options:nil]lastObject];
            }
            if (_dataArray.count!=0) {
                MasterDetailModel*model=_dataArray[0];
                [cell upDateWithModel:model];
            }
            cell.userInteractionEnabled=NO;
            cell.selected=NO;
            return cell;

        }
            break;
        case 1:
        {
            peopleDetaileeTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"peopleDetaileeTableViewCell"];
            if (cell == nil)
            {
                cell = [[[NSBundle mainBundle] loadNibNamed:@"peopleDetaileeTableViewCell" owner:nil options:nil]lastObject];
            }
            if (_dataArray.count!=0) {
                MasterDetailModel*model=_dataArray[0];
                [cell upDateWithModel3:model];
            }
            cell.selectionStyle=0;
            return cell;
        }
            break;
            case 2:
        {
            return [self getbeskeak:tableView];
        }
            break;
        case 3:
        {
            
            if (_dataArray.count!=0) {
                return [self getSkillCellWithTableview:tableView];
            }
            
        }
            break;
        case 4:
        {
           
            
          return  [self getRemark:tableView];
            
        }
            break;
        case 5:{
            if (indexPath.row==0) {
            recommendTableViewCell*cell=[tableView dequeueReusableCellWithIdentifier:@"Cell"];
            if (!cell) {
                cell=[[[NSBundle mainBundle]loadNibNamed:@"recommendTableViewCell" owner:nil options:nil] lastObject];
                
            }
            if (_recommentStatus==1) {
                starModel*model=[[starModel alloc]init];
                [model setValuesForKeysWithDictionary:[_currentDict objectForKey:@"orderComment"][0]];
                cell.model=model;
                cell.userInteractionEnabled=NO;
                [cell reloadData];
            }
            return cell;
            }
            if (indexPath.row==1) {
                replyTableViewCell*cell=[tableView dequeueReusableCellWithIdentifier:@"replyTableViewCell"];
                if (!cell) {
                    cell=[[[NSBundle mainBundle]loadNibNamed:@"replyTableViewCell" owner:nil options:nil]lastObject];
                }
                starModel*model=[[starModel alloc]init];
                [model setValuesForKeysWithDictionary:[_currentDict objectForKey:@"orderComment"][0]];
                cell.name.layer.cornerRadius=5;
                cell.name.text=[NSString stringWithFormat:@"%@回复:%@",[model.reply objectForKey:@"user"],[model.reply objectForKey:@"content"]];
                cell.name.backgroundColor=COLOR(228, 228, 228, 1);
                               return cell;
            }
        
        }
            break;
        default:
            break;
    }
    UITableViewCell*cell=[tableView dequeueReusableCellWithIdentifier:@"Acell"];
    if (!cell) {
        cell=[[UITableViewCell alloc]initWithStyle:1
                                   reuseIdentifier:@"Acell"];
    }
    cell.userInteractionEnabled=NO;

    return cell;
}



-(UITableViewCell*)getbeskeak:(UITableView*)tableview{
    UITableViewCell*cell=[tableview dequeueReusableCellWithIdentifier:@"cell2"];
    if (!cell) {
        cell=[[UITableViewCell alloc]initWithStyle:1 reuseIdentifier:@"cell2"];
    }
    UIView*view=(id)[self.view viewWithTag:105];
    if (view) {
        [view removeFromSuperview];
    }
    view=[[UIView alloc]initWithFrame:cell.bounds];
    view.tag=105;
    UILabel*name=[[UILabel alloc]initWithFrame:CGRectMake(10, 10, 80, 20)];
    name.text=@"预约时间";
    name.textColor=[UIColor blackColor];
    name.font=[UIFont systemFontOfSize:15];
    [view addSubview:name];
    UILabel*content=[[UILabel alloc]initWithFrame:CGRectMake(SCREEN_WIDTH-210, 10, 220, 20)];
    content.text=_bespeak;
    content.textColor=[UIColor blackColor];
    content.font=[UIFont systemFontOfSize:15];
    [view addSubview:content];
    [cell.contentView addSubview:view];
    cell.selected=NO;
    cell.userInteractionEnabled=NO;

    return cell;
    
}


-(UITableViewCell*)getRemark:(UITableView*)tableview{
    UITableViewCell*cell=[tableview dequeueReusableCellWithIdentifier:@"cell2"];
    if (!cell) {
        cell=[[UITableViewCell alloc]initWithStyle:1 reuseIdentifier:@"cell2"];
    }
    UIView*view=(id)[self.view viewWithTag:10];
    if (view) {
        [view removeFromSuperview];
    }
    view=[[UIView alloc]initWithFrame:cell.bounds];
    view.tag=10;
    UILabel*name=[[UILabel alloc]initWithFrame:CGRectMake(10, 10, 80, 20)];
    name.text=@"备注";
    name.textColor=[UIColor blackColor];
    name.font=[UIFont systemFontOfSize:14];
    [view addSubview:name];
    UILabel*content=[[UILabel alloc]initWithFrame:CGRectMake(SCREEN_WIDTH-210, 10, 220, 20)];
    content.text=_remark;
    content.textColor=[UIColor blackColor];
    content.font=[UIFont systemFontOfSize:14];
    [view addSubview:content];
    [cell.contentView addSubview:view];
    cell.selected=NO;
    cell.userInteractionEnabled=NO;
    return cell;
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    switch (indexPath.section) {
        case 0:
            return 109;
            break;
            case 1:
            return 115;
            break;
            case 2:
            return 40;
            break;
            case 3:
        {
            if (_dataArray.count==0) {
                return 50;
            }
            return [self accountSkill];
        }
            break;
            case 4:
            return 40;
            break;
            case 5:
        {
            if (indexPath.row==0) {
                NSArray*skillTemp=[[_currentDict objectForKey:@"orderComment"][0] objectForKey:@"acceptSkill"];
                NSString*skillString;
                for (NSInteger i=0; i<skillTemp.count; i++) {
                            if (i==0) {
                        skillString=skillTemp[i];
                    }else{
                        skillString=[NSString stringWithFormat:@"%@、%@",skillString,skillTemp[i]];
                    }
                }
                CGFloat skillHeight=[self accountStringHeightFromString:skillString Width:SCREEN_WIDTH-70-15]+10;
            NSString*temp=[[_currentDict objectForKey:@"orderComment"][0] objectForKey:@"content"];
            CGFloat height=[self accountStringHeightFromString:temp Width:SCREEN_WIDTH-20]+[self accountPic]+skillHeight;
                if (height<60) {
                    height=80;
                }
                
                if ([[[_currentDict objectForKey:@"orderComment"][0] objectForKey:@"picCase"] count]%4==0) {
            return ([[[_currentDict objectForKey:@"orderComment"][0] objectForKey:@"picCase"] count]/4)*45+20+height+skillHeight;
                }
                else{
                 return ([[[_currentDict objectForKey:@"orderComment"][0] objectForKey:@"picCase"] count]/4+1)*45+20+height+skillHeight;
                }
            }
            if (indexPath.row==1) {
                starModel*model=[[starModel alloc]init];
                [model setValuesForKeysWithDictionary:[_currentDict objectForKey:@"orderComment"][0]];
                return [self accountStringHeightFromString:[model.reply objectForKey:@"content"] Width:SCREEN_WIDTH-85]+10;
            }
        }
        default:
            break;
    }
    return 80;
}


-(CGFloat)accountPic{
    starModel*model=[[starModel alloc]init];
    [model setValuesForKeysWithDictionary:[_currentDict objectForKey:@"orderComment"][0]];
    if (model.picCase.count%4==0) {
        return model.picCase.count/4*40;
    }
    else{
        return (model.picCase.count/4+1)*45;
    
    }

}

-(CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section{
    if (section==0) {
        return 0;
    }
    return 20;

}
-(UIView*)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section{
    
     if (section==4) {
        return nil;
    }
    UIView*view=[[UIView alloc]initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, 20)];
    view.backgroundColor=COLOR(228, 228, 228, 1);
    if (section==5) {
        UILabel*label=[[UILabel alloc]initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, 20)];
        label.text=@"评价";
        label.textColor=[UIColor blackColor];
        label.font=[UIFont systemFontOfSize:15];
        [view addSubview:label];
    }
    return view;
}


-(UIView*)createButton{
    UIView*view=[[UIView alloc]initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, 40)];
    view.tag=101;
    self.statusButton=[[UIButton alloc]initWithFrame:CGRectMake(30, 5, SCREEN_WIDTH-60, 30)];
    self.statusButton.backgroundColor=[UIColor orangeColor];
    self.statusButton.layer.cornerRadius=10;
    [self.statusButton setTitle:_orderStatus forState:UIControlStateNormal];
    [self.statusButton setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
    self.statusButton.titleLabel.font=[UIFont systemFontOfSize:17];
    [self.statusButton addTarget:self action:@selector(order:) forControlEvents:UIControlEventTouchUpInside];
    [view addSubview:self.statusButton];
    return view;
}


-(void)order:(UIButton*)button{
    if ([button.titleLabel.text isEqualToString:@"工程完工"]==YES) {
        UIAlertView*alertive=[[UIAlertView alloc]initWithTitle:@"操作提示" message:@"是否确定已完工" delegate:self cancelButtonTitle:@"确定" otherButtonTitles:@"取消", nil];
        alertive.tag=80;
        [alertive show];
    }else if ([button.titleLabel.text isEqualToString:@"评价"]==YES){
    //评价界面操作。。。。。
        recommendStarsViewController*vcv=[[recommendStarsViewController alloc]initWithNibName:@"recommendStarsViewController" bundle:nil];
        vcv.model=_dataArray[0];
        vcv.id=self.id;
        [self pushWinthAnimation:self.navigationController Viewcontroller:vcv];
    }

}


-(UITableViewCell*)getSkillCellWithTableview:(UITableView*)tableView{
    UITableViewCell*cell=[tableView dequeueReusableCellWithIdentifier:@"CEll"];
    if (!cell) {
        cell=[[UITableViewCell alloc]initWithStyle:1 reuseIdentifier:@"CEll"];
    }
    if (_skillArray.count==0) {
        cell.textLabel.text=@"该用户暂时没有填写技能";
        cell.textLabel.font=[UIFont systemFontOfSize:15];
        cell.textLabel.textColor=COLOR(228, 228, 228, 1);
        return cell;
    }
    cell.textLabel.text=nil;
    UIView*view=(id)[self.view viewWithTag:31];
    if (view) {
        [view removeFromSuperview];
    }
    view=[[UIView alloc]initWithFrame:cell.bounds];
    view.tag=31;
    for (NSInteger i=0; i<_skillArray.count; i++) {
        skillModel*model=_skillArray[i];
        NSInteger width=(SCREEN_WIDTH-20-30)/4;
        UILabel*label=[[UILabel alloc]initWithFrame:CGRectMake(10+i%4*(width+5), 5+i/4*30, width-10, 25)];
        label.text=model.name;
        label.tag=12;
        label.font=[UIFont systemFontOfSize:12];
        label.layer.borderWidth=1;
        label.layer.cornerRadius=10;
        label.textAlignment=NSTextAlignmentCenter;
        label.textColor=[UIColor lightGrayColor];
        if (model.isSelect==YES) {
            label.textColor=COLOR(29, 90, 172, 1);
            label.layer.borderColor=[COLOR(29, 90, 172, 1)CGColor];
        }
        
        cell.accessoryType = UITableViewCellAccessoryDisclosureIndicator;
        label.enabled=YES;
        label.userInteractionEnabled=NO;
        [view addSubview:label];
        view.userInteractionEnabled=YES;
        [cell.contentView addSubview:view];
    }
    cell.userInteractionEnabled=NO;
    return cell;
}

-(CGFloat)accountSkill{
    
    if (self.skillArray.count==0) {
        return 50;
    }
    else
    {
        if (self.skillArray.count%4==0) {
            
            return self.skillArray.count/4*30+10;
        }
        else
        {
            return (self.skillArray.count/4+1)*30+10;
        }
    }
}

-(void)alertView:(UIAlertView *)alertView didDismissWithButtonIndex:(NSInteger)buttonIndex{
    if (buttonIndex==0) {
        [self flowShow];
        NSString*urlString=[self interfaceFromString: interface_finish];
        NSDictionary*dict=@{@"id":[NSString stringWithFormat:@"%lu",self.id]};
        [[httpManager share]POST:urlString parameters:dict success:^(AFHTTPRequestOperation *Operation, id responseObject) {
            NSDictionary*dict=(NSDictionary*)responseObject;
            if ([[dict objectForKey:@"rspCode"] integerValue]==200) {
                [self.view makeToast:@"提交成功" duration:1 position:@"center" Finish:^{
                    [self send];
                }];
            }else
            {
                [self.view makeToast:@"当前网络不好，请稍后重试" duration:1 position:@"center"];
            }
            [self flowHide];
        } failure:^(AFHTTPRequestOperation *Operation, NSError *error) {
            [self flowHide];
        }];
    }
}

@end
