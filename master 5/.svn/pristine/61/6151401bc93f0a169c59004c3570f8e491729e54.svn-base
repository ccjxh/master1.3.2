//
//  RegisteredViewController.m
//  BaoMaster
//
//  Created by xuting on 15/5/21.
//  Copyright (c) 2015年 xuting. All rights reserved.
//

#import "RegisteredViewController.h"
#import <SMS_SDK/SMS_SDK.h>

@interface RegisteredViewController ()
{
    BOOL value; //判断验证码是否验证成功
    int timeCountDown; //倒计时60s
    NSTimer *countDownTimer; //定义一个定时器
}
@end

@implementation RegisteredViewController

-(void) viewWillAppear:(BOOL)animated
{
    //隐藏导航栏按钮
    self.navigationController.navigationBarHidden = NO;
}
- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view from its nib.
    value = NO;
    self.navigationController.navigationBar.tintColor = [UIColor whiteColor];
    self.view.backgroundColor = [UIColor colorWithRed:79/255.0 green:187/255.0 blue:226/255.0 alpha:1.0];
    
    if (self.states == 1) {
        [self.registerButton removeFromSuperview];
        UIButton *resetPasswordBtn = [UIButton buttonWithType:UIButtonTypeSystem];
        resetPasswordBtn.backgroundColor = [UIColor colorWithRed:180/255.0 green:180/255.0 blue:180/255.0 alpha:1.0];
        resetPasswordBtn.frame = CGRectMake(120, 320, 80, 40);
        [resetPasswordBtn setTitle:@"重置密码" forState:UIControlStateNormal];
        [resetPasswordBtn setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
        resetPasswordBtn.titleLabel.font = [UIFont systemFontOfSize:15];
        [resetPasswordBtn addTarget:self action:@selector(resetPasswordClick) forControlEvents:UIControlEventTouchUpInside];
        [self.view addSubview:resetPasswordBtn];
        self.navigationItem.title = @"修改密码";
    } else {
        self.navigationItem.title = @"快速注册";
    }
    _telephoneTextField.backgroundColor = [UIColor clearColor];
    _telephoneTextField.placeholder = @"请输入正确的手机号码";
    _telephoneTextField.clearButtonMode = UITextFieldViewModeAlways;
    _verificationCodeTextField.backgroundColor = [UIColor clearColor];
    _verificationCodeTextField.clearButtonMode = UITextFieldViewModeAlways;
    _passwordTextField.backgroundColor = [UIColor clearColor];
    //设置密码为隐藏状态
    _passwordTextField.secureTextEntry = YES;
    _passwordTextField.clearButtonMode = UITextFieldViewModeAlways;
    _secondPasswordTextField.backgroundColor = [UIColor clearColor];
    _secondPasswordTextField.secureTextEntry = YES;
    _secondPasswordTextField.clearButtonMode = UITextFieldViewModeAlways;
    
    [self CreateFlow];
}

#pragma mark - 获取验证码按钮点击事件
- (IBAction)getVerificationCodeClick:(id)sender {
    //判断手机号码验证是否正确，正确可执行获取验证码操作
    BOOL buttonClick = NO;
    //判断手机号码是否正确
    NSString *phoneRegex = @"^((13[0-9])|(15[^4,\\D])|(18[0,0-9]))\\d{8}$";
    NSPredicate *phoneTest = [NSPredicate predicateWithFormat:@"SELF MATCHES %@",phoneRegex];
    if ( ![phoneTest evaluateWithObject: _telephoneTextField.text] ){
        [self.view endEditing:YES];
        [self.view makeToast:@"请输入正确的手机号码" duration:2.0 position:@"center"];
    } else {
        buttonClick = YES;
        timeCountDown = 60;
        countDownTimer = [NSTimer scheduledTimerWithTimeInterval:1 target:self selector:@selector(timeFireMethod) userInfo:nil repeats:YES];
//        [self.getVerificationCode setTitle:[NSString stringWithFormat:@"获取验证码(%d)",timeCountDown--] forState:UIControlStateNormal];
        self.numberLabel.text = [NSString stringWithFormat:@"(%d)",timeCountDown--];
        self.numberLabel.textColor = [UIColor grayColor];
        [self.getVerificationCode setTitleColor:[UIColor grayColor] forState:UIControlStateNormal];
        self.getVerificationCode.userInteractionEnabled = NO; //设置获取验证码不被点击
    }
    if (buttonClick == YES) {
        [SMS_SDK getVerificationCodeBySMSWithPhone:self.telephoneTextField.text zone:@"86" result:^(SMS_SDKError *error) {
            //error为nil表示获取验证码成功
            if(error == nil){
                self.verificationCodeTextField.delegate = self;
            }
        }];
    }
}
#pragma mark - 定时器实现的方法
-(void)timeFireMethod
{
    if (timeCountDown == 0) {
        [countDownTimer invalidate]; //取消定时器
        [self.getVerificationCode setTitle:@"获取验证码" forState:UIControlStateNormal];
        self.numberLabel.text = @"";
        [self.getVerificationCode setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
        self.getVerificationCode.userInteractionEnabled = YES;
    } else {
        self.numberLabel.text = [NSString stringWithFormat:@"(%d)",timeCountDown--];
        self.numberLabel.textColor = [UIColor grayColor];
        self.getVerificationCode.userInteractionEnabled = NO; //设置获取验证码按钮不被点击
    }
}
#pragma mark TextFieldDelegate
- (void)textFieldDidEndEditing:(UITextField *)textField  
{
    [self.view endEditing:YES];
    if (textField == self.verificationCodeTextField) {
        if (self.verificationCodeTextField.text.length == 4)
        {
            [self.view endEditing:YES];
            //提交验证码是否正确
            [SMS_SDK commitVerifyCode:self.verificationCodeTextField.text result:^(enum SMS_ResponseState state) {
                
                self.registerButton.userInteractionEnabled = NO;//设置获取验证码按钮不能被点击
                if( state == SMS_ResponseStateFail) {
//                    NSLog(@"验证码错误");
                    [self.view makeToast:@"验证码输入错误！" duration:2.0f position:@"center"];
                    [self.registerButton setTitleColor:[UIColor grayColor] forState:UIControlStateNormal];
                } else {
//                    NSLog(@"验证码成功");
                    [self.view makeToast:@"验证码输入成功！" duration:2.0f position:@"center"];
                    [self.getVerificationCode setTitle:@"获取验证码" forState:UIControlStateNormal];
                    [self.getVerificationCode setTitleColor:[UIColor grayColor] forState:UIControlStateNormal];
                    [self.registerButton setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
                    self.registerButton.userInteractionEnabled = YES;
                    [countDownTimer invalidate]; //取消定时器
                    value = YES;
                }
            }];
        }
    }
}
#pragma mark - 注册按钮点击事件
- (IBAction)registerdClick:(id)sender {
    [self flowShow];
    [self requestAFNet];
}
#pragma mark - 重置密码按钮点击事件
- (void) resetPasswordClick
{
    [self requestAFNet];
}
#pragma mark - 注册或重置密码的实现
-(void) requestAFNet
{
    if (self.telephoneTextField.text.length == 0) {
        [self flowHide];
        [self.view makeToast:@"请填写正确的手机号码" duration:2.0f position:@"center"];
    } else if( !value) {
        return;
    } else if(self.passwordTextField.text.length == 0 || self. secondPasswordTextField.text.length == 0) {
        [self flowHide];
        [self.view makeToast:@"请填写密码" duration:2.0f position:@"center"];
    } else if (self.passwordTextField.text.length >=19 || self.secondPasswordTextField.text.length >= 19){
        [self.view makeToast:@"密码长度不能超过19位数" duration:2.0f position:@"center"];
    } else if ( ![self.passwordTextField.text isEqualToString:self.secondPasswordTextField.text]) {
        [self.view makeToast:@"两次密码输入不一致" duration:2.0f position:@"center"];
    } else {
        if (self.states == 1)
        {
            NSString*urlString=[self interfaceFromString:interface_resetPassword];
            NSDictionary*dict=@{@"mobile":_telephoneTextField.text,@"password":_passwordTextField.text,@"password2":_secondPasswordTextField.text};
            [[httpManager share]POST:urlString parameters:dict success:^(AFHTTPRequestOperation *operation, id responseObject) {
                NSDictionary*dict=(NSDictionary*)responseObject;
                [self flowHide];
                if ([[dict objectForKey:@"rspCode"] integerValue]==200)
                {
                    [self.view makeToast:@"恭喜！密码重置成功。" duration:2.0f position:@"center"];
                    AppDelegate*delegate=[UIApplication sharedApplication].delegate;
                    [delegate setupHome];
                }
            } failure:^(AFHTTPRequestOperation *operation, NSError *error) {
                [self flowHide];
                [self.view makeToast:@"当前网络不给力，请检查网络设置" duration:1.0f position:@"center"];
            }];
        } else {
            NSString*urlString=[self interfaceFromString:interface_register];
            NSDictionary*dict=@{@"mobile":_telephoneTextField.text,@"password":_passwordTextField.text,@"password2":_secondPasswordTextField.text};
            [[httpManager share]POST:urlString parameters:dict success:^(AFHTTPRequestOperation *operation, id responseObject) {
                NSDictionary*dict=(NSDictionary*)responseObject;
                [self flowHide];
                if ([[dict objectForKey:@"rspCode"] integerValue]==200)
                {
                    [self.view makeToast:@"恭喜！注册成功。" duration:2.0f position:@"center"];
                    AppDelegate*delegate=[UIApplication sharedApplication].delegate;
                    [delegate setupHome];
                }
                else if([[dict objectForKey:@"rspCode"] integerValue]==500)
                {
                    [self flowHide];
                    [self.view makeToast:@"亲，手机号码已存在！" duration:2.0f position:@"center"];
                }
            } failure:^(AFHTTPRequestOperation *operation, NSError *error) {
                [self flowHide];
                [self.view makeToast:@"当前网络不给力，请检查网络设置" duration:1.0f position:@"center"];
            }];
        }
    }

}
@end
