//
//  OrderDetailViewController.m
//  master
//
//  Created by xuting on 15/6/3.
//  Copyright (c) 2015年 JXH. All rights reserved.
//

#import "OrderDetailViewController.h"
#import "ProvinceTableViewController.h"  //省份选择界面
#import "ChangeDateViewController.h" //日期选择界面
#import "ModifyInfoViewController.h" //修改页面
#import "AreaModel.h"
#import "MyInfoTableViewCell.h"
#import "requestModel.h"
#import "WechatPayViewController.h" //微信支付页面

@interface OrderDetailViewController ()
{
    NSArray *tableArr;
    NSMutableArray *skillArr; //所有技能数组
    NSMutableDictionary *uploadDataDic; //上传的字典
    NSArray *array;
    BOOL isNullOrder; //判断预约的必填项是否都填写
    NSString *skillIds; //存放被选中的技能的id
   }

@end

@implementation OrderDetailViewController
-(void) viewWillAppear:(BOOL)animated
{
//    self.tabBarController.tabBar.hidden = YES;
}

//地图
- (IBAction)getMap:(id)sender
{
    [self setupMap];
    
}

#pragma mark - 提交预约
- (IBAction)commitOrder:(id)sender
{
    [self isNullOrder];
    
    if (isNullOrder == YES)
    {
        NSString *skillId = [skillIds substringToIndex:skillIds.length - 1];
        [uploadDataDic setObject:skillId forKey:@"skillIds"];
        [uploadDataDic setObject:self.order_textField.text forKey:@"address"];
//        NSLog(@"%@",uploadDataDic);
        
        NSString *urlString = [self interfaceFromString:interface_commitOrder];
        [[httpManager share] POST:urlString parameters:uploadDataDic success:^(AFHTTPRequestOperation *Operation, id responseObject) {
            NSDictionary *objDic = (NSDictionary *)responseObject;
            
            NSDictionary *entityDic = objDic[@"entity"];
            NSDictionary *MasterOrderDTODic = entityDic[@"masterOrder"];
            if ([[objDic objectForKey:@"rspCode"]integerValue] == 200)
            {
                [self.view makeToast:@"恭喜，提交预约成功!" duration:2.0f position:@"center"];
                [self.view makeToast:@"恭喜，提交预约成功!" duration:1 position:@"center" Finish:^{
                    WechatPayViewController *wVC = [[WechatPayViewController alloc] init];
                    wVC.orderId = [MasterOrderDTODic[@"id"] integerValue];
                    
                    
                    
                    [self pushWinthAnimation:self.navigationController Viewcontroller:wVC];
                }];
                
            }
            else if ([[objDic objectForKey:@"rspCode"]integerValue] == 500)
            {
                [self.view makeToast:@"提交预约出现异常，请稍后再试!" duration:2.0f position:@"center"];
            }
            
            /******* 提交预约成功  ******/
            
   
            
        } failure:^(AFHTTPRequestOperation *Operation, NSError *error) {
            
//            NSLog(@"%@",error);
        }];
    }

}

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view from its nib.
    isNullOrder = YES;
    skillIds = @"";
    
    //注册通知中心
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(upDateRegion:) name:@"order" object:nil];
    
    uploadDataDic = [NSMutableDictionary dictionary];
    skillArr = [NSMutableArray array];
    self.order_tableView.delegate = self;
    self.order_tableView.dataSource = self;
//    self.order_tableView.scrollEnabled = YES;
    tableArr = @[@"开始时间",@"结束时间",@"联系人",@"联系电话"];
    
    //注册自定义cell
    [self.order_tableView registerNib:[UINib nibWithNibName:@"MyInfoTableViewCell" bundle:nil] forCellReuseIdentifier:@"MyInfoTableViewCell"];
    
    //设置regionLabel点击事件
    UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(regionBtn)];
    self.order_region.userInteractionEnabled = YES;
    [self.order_region addGestureRecognizer:tap];
    
    //设置textField代理
//    self.order_textField.delegate = self;
    
    [self requestSkills];
    
    array = @[@"startTime",@"finishTime",@"contract",@"phone",@"skillIds",@"remark",@"serviceRegion.id",@"address",@"master.id"];
    for (int i=0; i<array.count; i++)
    {
        [uploadDataDic setObject:@"" forKey:array[i]];
    }
    
    //
    [uploadDataDic setObject:[NSNumber numberWithInteger:self.masterId] forKey:@"master.id"];
    
}




#pragma mark - 地区选择
-(void) regionBtn
{
    NSUserDefaults *defaults = [NSUserDefaults standardUserDefaults] ;
    [defaults setObject:@"2" forKey:@"type"];
    [defaults synchronize];
    ProvinceTableViewController *ctl = [[ProvinceTableViewController alloc] init];
    [self pushWinthAnimation:self.navigationController Viewcontroller:ctl];
}
#pragma mark - 通知中心方法
-(void) upDateRegion:(NSNotification *)nof
{
    NSDictionary *dict =  nof.object;
    self.order_region.text = [dict objectForKey:@"region"];
    [uploadDataDic setObject:[dict objectForKey:@"regionId"] forKey:@"serviceRegion.id"];
    [requestModel requestRegionInfo:[dict objectForKey:@"regionId"]];
}

#pragma mark - UITableViewDelegate
-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 3;
}
-(CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    if (section == 0)
    {
        return 0;
    }
    return 20;
}
-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (indexPath.section == 1)
    {
        return 80;
    }
    return  44;
}
-(NSString *)tableView:(UITableView *)tableView titleForHeaderInSection:(NSInteger)section
{
    if (section == 0)
    {
        return nil;
    }
    else if (section == 1)
    {
        return @"技能要求";
    }
    else
    {
        return @"备注";
    }
}
-(NSInteger) tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    if (section == 0)
    {
        return 4;
    }
    else
    {
        return 1;
    }
}
-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    MyInfoTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"MyInfoTableViewCell"];
    if (cell == nil)
    {
        cell = [[MyInfoTableViewCell alloc]initWithStyle:1 reuseIdentifier:@"MyInfoTableViewCell"];
    }
    cell.accessoryType = UITableViewCellAccessoryDisclosureIndicator;
    //设置cell无点击效果
    cell.selectionStyle = UITableViewCellSelectionStyleNone;
    cell.listLabel.font = [UIFont systemFontOfSize:14];
    if (indexPath.section == 0)
    {
        cell.listLabel.text = tableArr[indexPath.row];
        if (indexPath.row == 2)
        {
            cell.contentLabel.text = self.name;
            [uploadDataDic setObject:self.name forKey:@"contract"];
        }
        else if(indexPath.row == 3)
        {
            cell.contentLabel.text = self.mobile;
            [uploadDataDic setObject:self.mobile forKey:@"phone"];
        }
        else
        {
        cell.contentLabel.text = [uploadDataDic objectForKey:array[indexPath.row]];
        }
    }
    
    if (indexPath.section == 1)   //技能要求
    {
        for (int i=0; i<skillArr.count; i++)
        {
            AreaModel *model = skillArr[i];
            UIButton *btn= [UIButton buttonWithType:UIButtonTypeSystem];
            btn.titleLabel.font = [UIFont systemFontOfSize:13];
            [btn setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
            btn.tag = i+100;
            if (model.isselect == YES)
            {
                btn.backgroundColor = [UIColor orangeColor];
            }
            else
            {
                btn.backgroundColor = [UIColor grayColor];
            }
            [btn addTarget:self action:@selector(skillsBtn:) forControlEvents:UIControlEventTouchUpInside];
            btn.layer.cornerRadius = 8;
            if (i >= 4 && i < 8)
            {
                btn.frame = CGRectMake(70*(i-4)+5, 40, 65, 25);
                [btn setTitle:model.name forState:UIControlStateNormal];
            }
            else if ( i >= 8)
            {
                btn.frame = CGRectMake(70*(i-3)+5, 75, 65, 25);
                [btn setTitle:model.name forState:UIControlStateNormal];
            }
            else
            {
                btn.frame = CGRectMake(5+(i*70), 5, 65, 25);
                [btn setTitle:model.name forState:UIControlStateNormal];
            }
            [cell.contentView addSubview:btn];
        }
    }
    if (indexPath.section == 2)
    {
        cell.listLabel.text = @"备注信息";
        cell.contentLabel.text = [uploadDataDic objectForKey:@"remark"];
    }
    return cell;
}
#pragma mark - UITableview datasource
-(void) tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (indexPath.section== 0)
    {
        if (indexPath.row == 0 || indexPath.row == 1)
        {
            ChangeDateViewController *ctl = [[ChangeDateViewController alloc]init];
            ctl.blockDateValue = ^(NSString *date){
                
                if (indexPath.row == 0)
                {
                    [uploadDataDic setObject:date forKey:@"startTime"];
                }
                else
                {
                    [uploadDataDic setObject:date forKey:@"finishTime"];
                }
                [self.order_tableView reloadData];
            };
            [self.navigationController pushViewController:ctl animated:YES];
        }
        else
        {
            ModifyInfoViewController *modify = [[ModifyInfoViewController alloc] init];
            if (indexPath.row == 2)
            {
                modify.index = 5;
            }
            else
            {
                modify.index = 0;
            }
            modify.modifyBasicInfoBlock = ^(NSString *mobile,long tag){
                
                if (indexPath.row == 2)
                {
                    [uploadDataDic setObject:mobile forKey:@"contract"];
                    self.model.realName = mobile;
                }
                else
                {
                    [uploadDataDic setObject:mobile forKey:@"phone"];
                    self.model.mobile = mobile;
                }
                [self.order_tableView reloadData];
            };
            [self.navigationController pushViewController:modify animated:YES];
        }
    }
    else if (indexPath.section == 1)
    {
        
    }
    else
    {
        ModifyInfoViewController *modify = [[ModifyInfoViewController alloc] init];
        modify.index = 6;
        modify.modifyBasicInfoBlock = ^(NSString *mobile,long tag){
            
            [uploadDataDic setObject:mobile forKey:@"remark"];
            [self.order_tableView reloadData];
        };
        [self.navigationController pushViewController:modify animated:YES];
    }
}

#pragma mark - 技能按钮点击事件
-(void) skillsBtn:(UIButton *)bt
{
    AreaModel *model = skillArr[bt.tag - 100];
    model.isselect = !model.isselect;
     skillIds = [skillIds stringByAppendingFormat:@"%ld,",(long)model.id];
    [self.order_tableView reloadData];
}

#pragma mark -  请求技能
-(void) requestSkills
{
    NSString *urlString = [self interfaceFromString:interface_skill];
    [[httpManager share]GET:urlString parameters:nil success:^(AFHTTPRequestOperation *Operation, id responseObject) {
        NSDictionary *objDic = (NSDictionary *)responseObject;
        NSArray *entityArr = objDic[@"entities"];
        for (int i=0; i<entityArr.count; i++)
        {
            AreaModel *model = [[AreaModel alloc] init];
            NSDictionary *dic=entityArr[i];
            NSDictionary *servicerSkillsDic = dic[@"servicerSkills"];
            model.id = [servicerSkillsDic[@"id"] integerValue];
            model.name = servicerSkillsDic[@"name"];
            model.isselect = NO;
            [skillArr addObject:model];
        }
        [_order_tableView reloadData];
        
    } failure:^(AFHTTPRequestOperation *Operation, NSError *error) {
        
    }];
}

#pragma mark - 判断提交预约必填项是否都填写
-(void) isNullOrder
{
    if (self.order_region.text.length == 0)
    {
        [self.view makeToast:@"请选择地区!" duration:2.0f position:@"center"];
        isNullOrder = NO;
    }
    else if (self.order_textField.text.length == 0)
    {
        [self.view makeToast:@"请输入详细地址!" duration:2.0f position:@"center"];
        isNullOrder = NO;
    }
    else if ([[uploadDataDic objectForKey:@"startTime"] isEqualToString:@""])
    {
       [self.view makeToast:@"请选择开始时间!" duration:2.0f position:@"center"];
        isNullOrder = NO;
    }
    else if ([[uploadDataDic objectForKey:@"finishTime"] isEqualToString:@""])
    {
        [self.view makeToast:@"请选择结束时间!" duration:2.0f position:@"center"];
        isNullOrder = NO;
    }
    else if ([[uploadDataDic objectForKey:@"contract"] isEqualToString:@""])
    {
        [self.view makeToast:@"请输入联系人!" duration:2.0f position:@"center"];
        isNullOrder = NO;
    }
    else if ([[uploadDataDic objectForKey:@"phone"] isEqualToString:@""])
    {
        [self.view makeToast:@"请输入联系电话!" duration:2.0f position:@"center"];
        isNullOrder = NO;
    }
    else if ([skillIds  isEqual: @""])
    {
        [self.view makeToast:@"请选择技能!" duration:2.0f position:@"center"];
        isNullOrder = NO;
    }
    else
    {
        isNullOrder = YES;
    }
}


//地图相关设置

-(void)setupMap{
    
    _mapManager=[[CLLocationManager alloc]init];
    _geocoder=[[CLGeocoder alloc]init];
    if (![CLLocationManager locationServicesEnabled]) {
        [self.view makeToast:@"定位尚未打开，请检查设置" duration:1 position:@"center"];
        
    }else{
        if ([CLLocationManager authorizationStatus]==kCLAuthorizationStatusNotDetermined){
            [_mapManager requestWhenInUseAuthorization];
           
        }else{
            
            _mapManager.delegate=self;
            _mapManager.desiredAccuracy=kCLLocationAccuracyBest;
            //定位频率,每隔多少米定位一次
            CLLocationDistance distance=10.0;//十米定位一次
            _mapManager.distanceFilter=distance;
            //启动跟踪定位
            [_mapManager startUpdatingLocation];
        }
        
    }
    
}


#pragma mark - CoreLocation 代理
-(void)locationManager:(CLLocationManager *)manager didUpdateLocations:(NSArray *)locations{
    CLLocation *location=[locations firstObject];//取出第一个位置
    CLLocationCoordinate2D coordinate=location.coordinate;//位置坐标
    NSLog(@"经度：%f,纬度：%f,海拔：%f,航向：%f,行走速度：%f",coordinate.longitude,coordinate.latitude,location.altitude,location.course,location.speed);
    //    //如果不需要实时定位，使用完即使关闭定位服务
    [_mapManager stopUpdatingLocation];
    [self getAddressByLatitude:coordinate.latitude longitude:coordinate.longitude];
}

#pragma mark 根据坐标取得地名
-(void)getAddressByLatitude:(CLLocationDegrees)latitude longitude:(CLLocationDegrees)longitude{
    //反地理编码
    CLLocation *location=[[CLLocation alloc]initWithLatitude:latitude longitude:longitude];
    [_geocoder reverseGeocodeLocation:location completionHandler:^(NSArray *placemarks, NSError *error) {
        CLPlacemark *placemark=[placemarks firstObject];
        _serviceRegion=[NSString stringWithFormat:@"%@-%@-%@",[placemark.addressDictionary objectForKey:@"State"],[placemark.addressDictionary objectForKey:@"City"],[placemark.addressDictionary objectForKey:@"SubLocality"] ];
        self.order_region.text=_serviceRegion;
        NSString*str=[placemark.addressDictionary objectForKey:@"FormattedAddressLines"][0];
        NSArray*tempArray=[str componentsSeparatedByString:[placemark.addressDictionary objectForKey:@"SubLocality"]];
        self.order_textField.text=tempArray[1];
//        NSLog(@"%@",[placemark.addressDictionary objectForKey:@"SubLocality"]);
      AreaModel*model1=[[dataBase share]findWithCity:[placemark.addressDictionary objectForKey:@"SubLocality"]];
       //数据库处理问题
        if ([uploadDataDic objectForKey:@"serviceRegion.id"]) {
            [uploadDataDic removeObjectForKey:@"serviceRegion.id"];
        }
        [uploadDataDic setObject:[NSString stringWithFormat:@"%lu",model1.id] forKey:@"serviceRegion.id"];
    }];
}


@end
